import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'application'
    id 'com.google.osdetector'           version '1.7.0'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.beryx.jlink'                 version '2.25.0'
    id 'net.nemerosa.versioning'         version '3.0.0'
}

normalization {
    runtimeClasspath {
        ignore('/META-INF/MANIFEST.MF')
    }
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

Date buildTimeAndDate = new Date()
ext {
    moduleName = 'eu.hansolo.fxdemos'
    buildDate  = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime  = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    platform   = osdetector.os == 'osx' ? osdetector.arch == 'aarch_64' ? 'mac-aarch64' : 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os == 'linux' ? osdetector.arch == 'aarch_64' ? 'linux-aarch64' : 'linux' : osdetector.os
}

dependencies {
    implementation "org.openjfx:javafx-base:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-swing:${javafxVersion}:${platform}"
    implementation 'com.google.gradle:osdetector-gradle-plugin:1.7.0'
    implementation 'eu.hansolo:toolbox:17.0.33'
    implementation 'eu.hansolo:toolboxfx:17.0.33'
    implementation 'eu.hansolo:medusa:17.1.5'
}

//mainClassName = '$moduleName/eu.hansolo.fx.fxmodules.Launcher'
mainClassName  = 'eu.hansolo.fxdemos.Launcher'
description    = 'Just a little JavaFX demo project'

jar {
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.runtimeClasspath.collect {  it.isDirectory() ? it : zipTree(it)  }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes(
                'Built-By'              : System.properties['user.name'],
                'Created-By'            : System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                'Build-Date'            : project.buildDate,
                'Build-Time'            : project.buildTime,
                'Build-Revision'        : versioning.info.commit,
                'Specification-Title'   : project.name,
                'Specification-Version' : project.version,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Bundle-Name'           : project.name,
                'Bundle-License'        : 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://spdx.org/licenses/Apache-2.0.html',
                'Bundle-Description'    : description,
                'Bundle-SymbolicName'   : 'eu.hansolo.fxdemos',
                'Class-Path'            : '${project.name}-${project.version}.jar',
                'Main-Class'            : 'eu.hansolo.fxmdemos.Launcher'
        )
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'eu.hansolo.fxdemos'
    }
}

// start the from gradle
task Main(type: JavaExec) {
    mainClass = "eu.hansolo.fxdemos.Launcher"
    classpath = sourceSets.main.runtimeClasspath
}

// Fix problems with loading resources
sourceSets {
    main {
        output.setResourcesDir(java.outputDir)
    }
}

run {
    inputs.property("moduleName", moduleName)
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--module', mainClassName
        ]
        classpath = files()
    }
}